SET1::::
1.  choose correct statement (CanFly, HasWings, Falcon)
    A: The code compiles without any issues
2.  what behavior (CanClimb, CanClimbTrees, EasterChipmunk)
    A:  The code will not compile because of line 8
3:  two BitSets code 1000001, 1111111
    A: Output1 prints 1001001
       Output2 prints 1000111
       Output3 prints 1000111
4:  REST API - MVC5 "StudentRESTService" to get list of students asyncrhonously
    A: httpClient.GetAsync(uri);
5.  client and server side of Song REST API.
    A:  entity
        MediaType.APPLICATION_JSON
        get()
6.  Kafka: command to create and change topic
    A: (correct answers should have --create & --alter,  !!!!there is no --modify)
7.  StartStreamExample - startStream
    A: run() {kafkaStreams.close(); CDlatch.countDown();}
       try{ kafkaStreams.start(); CDlatch.await()}
8.  Create a consumer in kafka
    A: KafkaConsumer<String,String> consumer= new KafkaConsumer<String,String>(properties);
       consumer.subscribe(Arrays.asList(topic));
9.  demonstrate a caching technique with java.cache.package
    A:  CachingProvider cacheProvider = Caching.getCachingProvider();
        Cache<String, String> cache = cacheManager.createCache("cache_id", config);
        cache.put("key", "value");
10. REST API /user
    A:  POST /user
        name = John & age = 25

SET2::::
1.  create a password (A-O and p-z) randomly for a user
    A:  Integer characterLength = characters.length();
        password += characters.charAt(random.nextInt(characterLength)); //nextInt(k) does not include k
2.  apache kafka consumer example
    A:  kafkaConsumer.subscribe(topics)
        ConsumerRecords<..> records = kafkaConsumer.poll(10);
        ConsumerRecord b = (ConsumerRecord) a.next()
3.  Spring boot - student management system
    A:  @EnableWebSecurity
        extends WebSecurityConfigurerAdapter
        auth.AuthenticationManagerBuilder myauth
4.  NoSQL - update marks in the subject "English" roo = 5
    A:  Cluster.builder().addContactPoint("127....")
        Session session = cluster.connect(dbName/keyspace) or newSession()
        session.execute(query)
5.  include the configurations of CarService bean only if it is not present in the application context
    A:  @Configuration
        public class CarAutoConfiguration{
            @Bean
            @ConditionalOnMissingBean
            public CarService carService(){...}
        }
6.  java: Basic String Manipulation -- 必要快速写
    A:  public static void main(String[] args) {
            Scanner in = new Scanner(System.in);
            String input = in.nextLine();  // Read the input string
            StringBuilder result = new StringBuilder();

            for (int i = 0; i < input.length(); i++) {
                char c = input.charAt(i);

                if (Character.isUpperCase(c)) {
                    result.append(Character.toLowerCase(c));
                } else if (Character.isLowerCase(c)) {
                    result.append(Character.toUpperCase(c));
                } else {
                    result.append(c);  // Keep non-letter characters as-is
                }
            }

            System.out.println(result.toString());
        }


7.  java: cleanTxtFiles() remove all non alphabet characters from .txt file
    A:  Files.walkFileTree(path, new SimpleFileVisitor(startPath)
        BufferedWriter
        line -> line.replaceAll..
8.  MongoDB
    A:  mapReduce
        map
        reduce
9.  ActiveMQ with JMS (https://activemq.apache.org/version-5-hello-world)
    A:  ConnectionFactory = new ActiveMQConnectionFactory(...)
        Connection connection = connectionFactory.createConnection();
        TextMessage message = session.createTextMessage(text);
10. Spring Boot Log4J levels
    A: FATAL,  ERROR, WARN, INFO, DEBUG, TRACE
11. In kafka, what is the logical feed name to which records are published and supports a multi-subscriber model?
    A: Topic


SET3:::::

